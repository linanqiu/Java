Object Oriented Programming

Class: Things having similar characteristics are grouped in one class. 
Object of class.

Access Specifiers:

Private: Can only be accessed inside the class it is declared.
Public: Can be fully accessed even outside the class.
Protected: Can be used only if the class is inherited.
(Default): If nothing is specified. Can be accessed only within the package but not outside package.

Encapsulation: packing things inside a class and then controlling their visibility by making them public, private, protected or default.

Overloading: More than one function in same class having same name but different number or types of arguments.

Two types of members in a class:
1. Static: Different students will not have different technologies. They work on common technology. 
Static members of a class belong to a class and not to individual object. 
2. Non-static: Belong seperately to each individual objects. i.e. they are different for different objects.

Whenever we call println, the call goes to toString method of String class. 

Abstraction: Hiding detailed methodology and showing only interface. 

Polymorphism: poly-more than one. morphism-shape. Overloading is one type of polymorphism. 
Overwriting is another type of polymorphism. Run-time polymorphism. Operator overloading not supported in java
but other languages support it, it is also polymorphism.

Inheritence: Child class inherits from parents. Keyword used is "extend".

Constructor: Constructor is the member function of class having same name as class.
It can be overloaded with different number of arguments. It is used to initialize values to data members. 
How do we call them? Constructor of a class is always called whenever an object of that class is created.





/*
Object: Class object is root of class heirarchy. Every class has object as superclass.
We don't need to inherit object class. It is automatically inherited. 
Object class is parent of all the classes in java. 
Ojbect class contains 9 functions:
1. getClass //returns class of that object.
2. hashCode
3. equals 
4. Clone
5. toString
6. notify
7. notifyAll
8. wait
9. finalize
*/





